// Question 3
#include <iostream>
#include <algorithm>

using namespace std;

void bubbleSort(int matrix[][3], int r){

    for (int i = 0; i < 3; i++){ //loop for rows
        
            for (int j = 0; j < 3; j++) { // loop for col of matrix
                for (int k = 0; k <  r - j  - 1; k++){
                   if (matrix[i][k] > matrix[i][k + 1]){ //comapare them and swap them
                    //if row whatever # is > number next to it swap
                    swap(matrix [i][k], matrix[i][k + 1]); // here it swaps the two current numbers so that the smaller one is in front
                   }
                }
           }
        }
    
}

void selectionSort(int matrix[][3], int r, int c){
    //first outer loop to go through rows
    for (int i=0; i< r; i++){ // iterate through rows
        for(int j=0; j<c; j++){ //iterate through cols
            
            //finding the min value for r and c
            int rowMin= i;
            int colMin=j;
            int allMin = matrix[i][j];
            
            //will sort cutrent row
            for(int innerCol = j+1; innerCol < c; innerCol++){ //sorting by col in current row
                if( matrix[i][j] < allMin){ // compares current position to our min value
                    rowMin=i;
                    colMin=innerCol;
                    allMin= matrix [i][innerCol];  // gets the min value for that row
                }
            }
            
            // after current row will move on to next one, same col loop done for each row
            for(int innerRow=i+1; innerRow< r; innerRow++){ // proceeds to rest of the rows
                for (int innerCol = 0; innerCol < c; innerCol++) { // sorting by col
                    if (matrix[innerRow][innerCol] < allMin) {   // compares current position to min value
                        rowMin = innerRow;
                        colMin = innerCol;
                        allMin = matrix[innerRow][innerCol]; //reassigns min again based on value
                    }
            }
                matrix[rowMin][colMin] = matrix[i][j];
                matrix[i][j]= allMin; // all min contains value of min
            
        }
    }
  }
}


void printMatrix(int matrix[][3]) {
    //output unsorted matrix value
    for (int i=0; i<3; i++){
        for(int j=0; j<3 ; j++){
            cout << matrix[i][j] << " " ;
        }
        cout<< endl;
    }
}


int main(){
    int matrix[3][3] ={{7,5,4}, {8,2,9}, {3,1,6}};
    
    int c = 3;  //total number of col
    int r = 3;  //total number of rows

    
    cout << "The unsorted matrix is: " << endl;
    printMatrix(matrix);
    
    bubbleSort(matrix,r); //sorts matrix by rows
    cout<< "This matrix is sorted by bubble sort"<< endl;
    printMatrix(matrix);
    
    selectionSort(matrix,r,c);
    cout<< "This matrix is sorted by selection sort"<< endl;
    printMatrix(matrix);
  

}
 
